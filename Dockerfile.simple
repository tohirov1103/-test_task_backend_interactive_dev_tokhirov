FROM node:18-alpine

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache wget

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nestjs -u 1001

# Copy package files
COPY package*.json ./

# Install all dependencies
RUN npm ci

# Copy source code
COPY . .

# Debug: Check environment before build
RUN echo "=== Before build ===" && ls -la
RUN echo "=== Node and npm versions ===" && node --version && npm --version
RUN echo "=== NestJS CLI version ===" && ./node_modules/.bin/nest --version

# Build the application using TypeScript directly (same as local)
RUN npx tsc --project tsconfig.build.json

# Debug: Check what happened after build
RUN echo "=== After build ===" && ls -la
RUN echo "=== Looking for dist directory ===" && find . -name "dist" -type d 2>/dev/null || echo "No dist directory found"
RUN echo "=== Looking for main.js ===" && find . -name "main.js" 2>/dev/null || echo "No main.js found"

# Check if there are any build errors in package.json
RUN echo "=== Package.json build script ===" && cat package.json | grep -A 2 -B 2 '"build"'

# Change ownership to non-root user
RUN chown -R nestjs:nodejs /app
USER nestjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Start the application
CMD ["node", "dist/main.js"]